digraph Document{bgcolor="transparent";node [shape="record",fontname="UbuntuMono-Regular",fontsize="11",style="filled",fillcolor="#ffffff"];edge [arrowhead="none",arrowtail="none",fontname="Ubuntu Mono",fontsize="11"];Document[label="{Document|+ diagram : Diagram \l|+ Document(diagram : Diagram)\l}";];ClassDiagram[label="{ClassDiagram|+ type : string \l+ classes : Class[] \l+ links : Link[] \l|+ ClassDiagram(classes : Class[], links : Link[])\l+ hasClass(class : Class) : boolean\l+ hasLink(link : Link) : boolean\l}";];Class[label="{Class|+ name : string \l+ properties : Property[] \l+ methods : Method[] \l|+ Class(name : string, properties : Property[], methods : Method[])\l+ hasProperty(property : Property) : boolean\l+ hasMethod(method : Method) : boolean\l}";];Property[label="{Property|+ visibility : string \l+ variable : Variable \l|+ Property(visibility : string, variable : Variable)\l}";];Method[label="{Method|+ arguments : Variable[] \l|+ Method(visibility : string, variable : Variable, arguments : Variable[])\l+ hasArgument(argument : Variable) : boolean\l}";];Variable[label="{Variable|+ name : string \l+ type : string \l|+ Variable(name : string, type : string)\l}";];Link[label="{Link|+ type : string \l+ first : Class \l+ second : Class \l+ descrition : string \l+ head_descrition : string \l+ tail_descrition : string \l|+ Link(type : string, first : Class, second : Class, descrition : string, head_descrition : string, tail_descrition : string)\l+ toJSON() : Object\l}";];GraphvizDot[label="{GraphvizDot|+ document : Document \l|+ GraphvizDot(document : Document)\l- _document(document : Document) : string\l- _diagram(diagram : Diagram) : string\l- _classDiagram(diagram : ClassDiagram) : string\l- _links(links : Link[]) : string\l- _link(link : Link) : string\l- _classes(classes : Class[]) : string\l- _class(class : Class) : string\l- _properties(properties : Property[]) : string\l- _property(property : Property) : string\l- _methods(methods : Method[]) : string\l- _method(method : Method) : string\l- _arguments(arguments : Variable[]) : string\l- _variable(variable : Variable) : string\l+ export() : string\l}";];JSONFactory[label="{JSONFactory|+ classes : Class[] \l+ refs : Object[] \l|+ JSONFactory()\l+ addClass(name : string, class : Class) : void\l+ getClass(name : string) : Class\l+ buildDocument(data : Object) : Document\l+ buildDiagram(data : Object) : Diagram\l+ buildClasses(data : Object) : Class[]\l+ buildClass(data : Object) : Class\l+ buildProperties(data : Object) : Property[]\l+ buildProperty(data : Object) : Property\l+ buildMethods(data : Object) : Method[]\l+ buildMethod(data : Object) : Method\l+ buildArguments(data : Object) : Variable[]\l+ buildVariable(data : Object) : Variable\l+ buildLinks(data : Object) : Link[]\l+ buildLink(data : Object) : Link\l+ build(data : Object) : Document\l}";];Property->Method[dir="both",arrowtail="onormal",label="",headlabel="",taillabel=""];Document->ClassDiagram[dir="both",arrowtail="odiamond",label="",headlabel="",taillabel=""];ClassDiagram->Class[dir="both",arrowtail="odiamond",label="",headlabel="",taillabel=""];ClassDiagram->Link[dir="both",arrowtail="odiamond",label="",headlabel="",taillabel=""];Class->Property[dir="both",arrowtail="odiamond",label="",headlabel="",taillabel=""];Class->Method[dir="both",arrowtail="odiamond",label="",headlabel="",taillabel=""];Property->Variable[dir="both",arrowtail="odiamond",label="",headlabel="",taillabel=""];}
